name: Build SmartRetail Microservices

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ----------------------------
      # .NET SERVICE (OrderService)
      # ----------------------------
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore .NET dependencies
        run: |
          if [ -d "OrderService" ] && [ -f "OrderService/OrderService.sln" ]; then
            echo "Restoring .NET dependencies..."
            dotnet restore OrderService/OrderService.sln
          else
            echo "OrderService not found — skipping .NET restore."
          fi

      - name: Build .NET project
        run: |
          if [ -d "OrderService" ] && [ -f "OrderService/OrderService.sln" ]; then
            echo "Building .NET project..."
            dotnet build OrderService/OrderService.sln --no-restore --configuration Release
          else
            echo "OrderService not found — skipping .NET build."
          fi

      # ----------------------------
      # NODE.JS SERVICE (InventoryService)
      # ----------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node.js dependencies
        run: |
          if [ -d "InventoryService" ] && [ -f "InventoryService/package.json" ]; then
            echo "Installing Node.js dependencies..."
            cd InventoryService
            npm install
            cd ..
          else
            echo "InventoryService/package.json not found — skipping npm install."
          fi

      - name: Build Node.js project
        run: |
          if [ -d "InventoryService" ] && [ -f "InventoryService/package.json" ]; then
            echo "Building InventoryService..."
            cd InventoryService
            npm run build || echo "No build script found — skipping build."
            cd ..
          else
            echo "InventoryService not found — skipping build."
          fi

      # ----------------------------
      # PYTHON SERVICE (NotificationService)
      # ----------------------------
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          if [ -d "NotificationService" ] && [ -f "NotificationService/requirements.txt" ]; then
            echo "Installing Python dependencies..."
            cd NotificationService
            pip install -r requirements.txt
            cd ..
          else
            echo "NotificationService/requirements.txt not found — skipping."
          fi

      - name: Validate Python project
        run: |
          if [ -d "NotificationService" ] && [ -f "NotificationService/main.py" ]; then
            echo "Linting NotificationService..."
            cd NotificationService
            python -m py_compile main.py
            cd ..
          else
            echo "NotificationService not found — skipping validation."
          fi

      # ----------------------------
      # DONE
      # ----------------------------
      - name: Build Summary
        run: echo "✅ All microservices built successfully!"
